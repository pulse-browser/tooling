import { existsSync, writeFileSync } from 'fs'
import { resolve } from 'path'
import { cwd } from 'process'
import { xulElements } from 'xul-elements'

let jsxFileContents = `// This file is autogenerated. If you need to modify it, change scripts/createElementTypes.ts instead.

import { UniversalXULProps } from './xul.d.ts'

type XULElementBuilder<T> = T &
  UniversalXULProps

`

for (const element of xulElements) {
  const definitionType = resolve(cwd(), 'src/elements', `${element}.d.ts`)

  jsxFileContents += `import { ${element}Props } from './elements/${element}.d.ts'\n`

  if (existsSync(definitionType)) {
    continue
  }

  writeFileSync(definitionType, `export interface ${element}Props {}\n`)
}

jsxFileContents += `

declare global {
    namespace JSX {
        interface IntrinsicElements {
            ${xulElements
              .map(
                (element) => `${element}: XULElementBuilder<${element}Props>;`
              )
              .join('\n            ')}
        }
    }
}

`

writeFileSync(resolve(cwd(), 'src/jsx.d.ts'), jsxFileContents)
